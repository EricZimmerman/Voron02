############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------


#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
rotation_distance: 4.683
sensor_type: ATC Semitec 104NT-4-R025H42G
control: pid
#pid_kp: 26.015
#pid_ki: 1.770
#pid_kd: 95.603

pid_Kp=24.058 
pid_Ki=2.359 
pid_Kd=61.350

[heater_bed]
control: pid
#pid_kp: 38.771
#pid_ki: 1.746
#pid_kd: 215.177

pid_Kp=67.219 
pid_Ki=1.042 
pid_Kd=1083.905


#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
# [stepper_z1]
# dir_pin: !Z1_DIR

# [stepper_z3]
# dir_pin: !Z3_DIR

[stepper_z]
dir_pin: !Z_DIR

#-------------------------#
#   Probe Offsets         #
#-------------------------#

## Here is an example of some overrides for bed probes. These frequently have calibrated offsets for xyz,
## and many will need them during setup. If you need to set these, just uncomment the following lines.
# [probe]
# x_offset: -1.85
# y_offset: 29.3
# z_offset: 12.6


[tmc2209 extruder]
## For LDO LDO 36STH20-1004AHG 1A 1.8Â° 
run_current: 0.65 # for LDO 36STH20-1004AHG


[tmc2209 stepper_x]
diag_pin: ^X_STOP
driver_SGTHRS: 90

[tmc2209 stepper_y]
diag_pin: ^Y_STOP
driver_SGTHRS: 90

[stepper_z]
position_endstop: 116.646 #116.496 #.455 #117.309  # Smaller position_endstop is less squish, bigger is more
 
[tmc2209 stepper_z]
interpolate: False
run_current: 0.40

[neopixel caselight]
pin: mcu:STATUS_NEOPIXEL
chain_count: 21
color_order: GRB
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1


# manual include since my order is different

# Neopixel leds used on the toolhead (stealthburner style)
[gcode_macro _USER_VARIABLES]
variable_status_leds_enabled: True
variable_status_leds_logo_led_name: "status_leds"
variable_status_leds_logo_idx: '3'
variable_status_leds_nozzle_led_name: "status_leds"
variable_status_leds_nozzle_idx: '1,2'
gcode:

# Also include directly the leds control macros from here
[include ./macros/hardware_functions/status_leds.cfg]


[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#
